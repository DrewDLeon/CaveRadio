// <auto-generated />
using System;
using CaveRadio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CaveRadio.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231126065113_songs")]
    partial class songs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CaveRadio.Models.Entities.Song", b =>
                {
                    b.Property<Guid>("song_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("song_artist")
                        .HasColumnType("text");

                    b.Property<string>("song_genre")
                        .HasColumnType("text");

                    b.Property<string>("song_image")
                        .HasColumnType("text");

                    b.Property<string>("song_name")
                        .HasColumnType("text");

                    b.Property<string>("song_path")
                        .HasColumnType("text");

                    b.Property<string>("song_uri")
                        .HasColumnType("text");

                    b.HasKey("song_id");

                    b.ToTable("songs");
                });
#pragma warning restore 612, 618
        }
    }
}
